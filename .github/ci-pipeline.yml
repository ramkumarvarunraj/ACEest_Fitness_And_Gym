# This is a basic workflow to help you get started with Actions

name: Python Application CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push events for the main and master branches
  push:
    branches: [ "main", "master" ]
  # Triggers the workflow on pull request events targeting the main and master branches
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build-and-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Build the Docker image from the Dockerfile
      # We tag the image for easy reference in the next step.
      - name: Build Docker image
        run: docker build . --file Dockerfile --tag my-app

      # Step 3: Run Pytest inside the Docker container
      # This command starts a container from the image and overrides the default CMD
      # to execute 'pytest' instead. This validates your code within the containerized environment.
      - name: Run tests within Docker container
        run: docker run --rm my-app pytest
